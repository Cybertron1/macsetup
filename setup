#!/bin/bash
set -e
help() {
  B="\033[1m"
  S="\033[0m"
  INDENT="\t\t\t\t"
  echo "macsetup is a simple script to setup a mac. The script contain two parts: install and config"
  echo -e "${B}install$S installs all developer tools, apps and everything else that is necessary"
  echo -e "${B}config$S configures said tools and apps. Additionally it runs some custom dotfiles to have the mac to your liking"
  echo
  echo -e "This script can be run directly from github
${B}bash <(curl -s https://raw.githubusercontent.com/Cybertron1/macsetup/master/install) --help$S"
  echo -e "Or it can be run locally ${B}./setup --help"$S
  echo
  echo "Default: setup -e=all -q=ask"
  echo "Syntax: setup [-e=*|-q=*|-h]"
  echo "options:"
  echo -e "\t-e, --execute\t\tWhich part of the script to execute
$INDENT${B}Default$S: all
$INDENT${B}Allowed$S: all, install, config"
  echo -e "\t-q, --questions\t\tIn some cases a user action is required. -q can provide a predefined answer
$INDENT${B}Default$S: ask
$INDENT${B}Allowed$S: ask, yes, no"
  echo -e "\t-h, --help\t\tDisplays help"
  echo
}

containsElement() {
  local e match="$1"
  shift
  for e; do [[ "$e" == "$match" ]] && return 0; done
  return 1
}

if [[ $# -eq 0 ]]; then
  export MAC_SETUP_EXECUTE="all"
  export MAC_SETUP_QUESTIONS="ask"
fi

shopt -s nocasematch
for var in "$@"; do
  case $var in
  --execute=* | -e=*)
    execute=${var#*=}
    check=("install" "config" "all")
    if ! containsElement "${execute}" "${check[@]}"; then
      echo "error"
      exit 1
    fi

    if [ -n "$MAC_SETUP_EXECUTE" ]; then
      echo "error 2"
    fi
    export MAC_SETUP_EXECUTE="$execute"
    ;;

  --questions=* | -q=*)
    questions=${var#*=}
    check=("yes" "no" "ask")
    if ! containsElement "${questions}" "${check[@]}"; then
      echo "error"
      exit 1
    fi

    if [ -n "$MAC_SETUP_QUESTIONS" ]; then
      echo "error 2"
    fi
    export MAC_SETUP_QUESTIONS="$questions"
    ;;
  --help | -h)
    help
    exit 0
    ;;
  *)
    echo "$var is not a valid argument"
    help
    exit 1
    ;;
  esac
done
shopt -u nocasematch
bash ./runner
